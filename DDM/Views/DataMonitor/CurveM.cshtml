@{
    Layout = null;
    ViewBag.Title = "Curve";
}
<!DOCTYPE html>
<html lang="zh">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <title>钻井数据监控平台</title>
    <link href="~/favicon1.ico" rel="shortcut icon" type="image/x-icon" />
    <meta name="viewport" content="width=device-width" />
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
   <script src="@Url.Content("~/Scripts/jcanvas.min.js")?v=8"></script>
    
</head>
<body>

<style type="text/css">
    .contextmenu {
				display: none;
				position: absolute;
				width: 100px;
				background:#e5e0e0;
				border-radius: 2px;
				overflow: hidden;
				z-index: 99;
                font-size:12px;
                padding: 5px;
                border:2px groove #fff;
			}
			
			.contextmenu li {
                list-style-type:none;
				transition: ease 0.3s;
                line-height:25px;
                border: 1px solid transparent;
                
                border-bottom:2px groove #fff;
                padding-left:5px;
                padding-right:5px;
			}
			
			.contextmenu li:hover {
				background-image: linear-gradient(#d0e6f3, #e5e0e0);
                border-radius: 3px;
                border: 1px solid #88cef8;
                border-bottom:2px groove #fff;
			}
			
			.contextmenu li a {
				display: block;
				color: #000000;
				text-decoration: none;
				transition: ease 0.3s;
			}
			
			
</style>
<script type="text/javascript">
    var Controlobj;
    //$(function () {
    //    $("#dv_curve").height(($(document).height()-10 ) + "px");
    //});
    document.oncontextmenu = function (e) {
        return false;
    }
    $(document).click(function () {
        $(".contextmenu").hide();
    });
    function contextmenufun(e)
    {
        // 获取窗口尺寸
        var winWidth = $(document).width();
        var winHeight = $(document).height();
        // 鼠标点击位置坐标
        var mouseX = e.pageX;
        var mouseY = e.pageY;
        // ul标签的宽高
        var menuWidth = $(".contextmenu").width();
        var menuHeight = $(".contextmenu").height();
        // 最小边缘margin(具体窗口边缘最小的距离)
        var minEdgeMargin = 10;
        // 以下判断用于检测ul标签出现的地方是否超出窗口范围
        // 第一种情况：右下角超出窗口
        if (mouseX + menuWidth + minEdgeMargin >= winWidth &&
            mouseY + menuHeight + minEdgeMargin >= winHeight) {
            menuLeft = mouseX - menuWidth - minEdgeMargin + "px";
            menuTop = mouseY - menuHeight - minEdgeMargin + "px";
        }
            // 第二种情况：右边超出窗口
        else if (mouseX + menuWidth + minEdgeMargin >= winWidth) {
            menuLeft = mouseX - menuWidth - minEdgeMargin + "px";
            menuTop = mouseY + minEdgeMargin + "px";
        }
            // 第三种情况：下边超出窗口
        else if (mouseY + menuHeight + minEdgeMargin >= winHeight) {
            menuLeft = mouseX + minEdgeMargin + "px";
            menuTop = mouseY - menuHeight - minEdgeMargin + "px";
        }
            // 其他情况：未超出窗口
        else {
            menuLeft = mouseX + minEdgeMargin + "px";
            menuTop = mouseY + minEdgeMargin + "px";
        };
        // ul菜单出现
        $(".contextmenu").css({
            "left": menuLeft,
            "top": menuTop
        }).show();
    }


    function drawcanvas() {

        var canwidth = $(document).width() - 20;
        var canheight = 161;
        $('#can_header').attr("width", canwidth);
        $('#can_header').attr("height", canheight);
        $('#can_header').scaleCanvas({
            scale: 1
        }).drawLine({
            fillStyle: '#ffffff',
            layer: true,
            x1: 0, y1: 0,
            x2: canwidth, y2: 0,
            x3: canwidth, y3: canheight,
            x4: 0, y4: canheight,
            closed: true
        })
            .drawRect({
                strokeStyle: '#000',
                strokeWidth: 1,
                layer: true,
                draggable: true,
                x: 10.5, y: 10.5,
                width: 150,
                height: 150,
                fromCenter: false,
                groups: ['curve1'],
                dragGroups: ['curve1'],
                restrictDragToAxis: 'x'
            })
            .mousedown(function (e) {
                if (e.which == 3) {  // 1 = 鼠标左键; 2 = 鼠标中键; 3 = 鼠标右键
                    contextmenufun(e);
                }else
                {
                    return false;
                }
            })
            //.drawLine({
            //strokeStyle: '#000',
            //strokeWidth: 2,
            //x1: 100, y1: 50,
            //x2: 250, y2: 50,
            //x3: 250, y3: 200,
            //x4: 100, y4: 200,
            //closed: true
            //})
            .drawText({
                fillStyle: 'blue',
                x: 85, y: 82,
                fontSize: 18,
                text: '钻压/钻速/垂深',
                fontFamily: '宋体',
                groups: ['curve1'],
                dragGroups: ['curve1'],
                restrictDragToAxis: 'x'
            }).drawLine({
                layer: true,
                strokeStyle: '#000',
                strokeWidth: 1,
                x1: 10, y1: 130.5,
                x2: 160, y2: 130.5,
                groups: ['curve1'],
                dragGroups: ['curve1'],
                restrictDragToAxis: 'x'
            }).drawRect({
                strokeStyle: '#000',
                strokeWidth: 1,
                layer: true,
                draggable: true,
                x: 160.5, y: 10.5,
                width: 50,
                height: 150,
                fromCenter: false,
                groups: ['curve2'],
                dragGroups: ['curve2'],
                restrictDragToAxis: 'x'
            }).drawText({
                layer: true,
                fillStyle: 'blue',
                x: 185, y: 82,
                fontSize: 18,
                text: '深\n度',
                fontFamily: '宋体',
                groups: ['curve2'],
                dragGroups: ['curve2'],
                restrictDragToAxis: 'x',
                maxWidth: 20
            }).drawRect({
                strokeStyle: '#000',
                strokeWidth: 1,
                layer: true,
                draggable: true,
                x: 210.5, y: 10.5,
                width: 150,
                height: 150,
                fromCenter: false,
                groups: ['curve3'],
                dragGroups: ['curve3'],
                restrictDragToAxis: 'x'
            }).drawText({
                layer: true,
                fillStyle: 'blue',
                x: 290, y: 82,
                fontSize: 18,
                text: '电阻率',
                fontFamily: '宋体',
                groups: ['curve3'],
                dragGroups: ['curve3'],
                restrictDragToAxis: 'x'
            });
        $('#can_datas').attr("width", canwidth);
        $('#can_datas').attr("height", 450);

        $('#can_datas').scaleCanvas({
            scale: 1
        }).drawRect({
            fillStyle: '#ffffff',
            layer: true,
            x: 0, y: 0,
            width: canwidth,
            height: 450,
            fromCenter: false
        })
            .drawRect({
                strokeStyle: '#000',
                strokeWidth: 1,
                layer: true,
                name: 'curve_area_1',
                draggable: false,
                x: 10.5, y: 0.5,
                width: 150,
                height: 400,
                fromCenter: false,
                mousemove: function (layer) {
                    //让area_line直线跟随鼠标
                    $(this).animateLayer('area_line', {
                        opacity: 1,
                        x: layer.x, y: layer.eventY /1
                    }, 0)
                }
            }).drawRect({
                strokeStyle: '#000',
                strokeWidth: 1,
                layer: true,
                draggable: false,
                name: 'curve_area_2',
                x: 160.5, y: 0.5,
                width: 50,
                height: 400,
                fromCenter: false
            }).drawRect({
                strokeStyle: '#000',
                strokeWidth: 1,
                layer: true,
                draggable: false,
                name: 'curve_area_3',
                x: 210.5, y: 0.5,
                width: 150,
                height: 400,
                fromCenter: false
            });
    }
    window.onload = function () {
        
        drawcanvas();
        drawYLines($('#can_datas'), $('#can_datas').getLayer('curve_area_1'));
        drawXLines($('#can_datas'), $('#can_datas').getLayer('curve_area_1'));
        drawDepths($('#can_datas'), $('#can_datas').getLayer('curve_area_2'));
        drawYLines($('#can_datas'), $('#can_datas').getLayer('curve_area_3'));
        drawXLines($('#can_datas'), $('#can_datas').getLayer('curve_area_3'));
        drawAreaLine($('#can_datas'), $('#can_datas').getLayer('curve_area_1'));
    };
    //画坐标系(自然数)
    function drawYLines(canvas,layer)
    {
        var oneitemwidth = layer.width / 10;
        //将宽高平均分成10等份，画9条线
        for (var i = 1; i < 10; i++) {
            //纵轴
            canvas.drawLine({
                strokeStyle: '#cccccc',
                strokeWidth: 1,
                layer:true,
                x1: layer.x + (oneitemwidth * i), y1: layer.y + 1,
                x2: layer.x + (oneitemwidth * i), y2: layer.y + layer.height - 1,
            });
        }
    }
    function drawXLines(canvas, layer) {
        var oneitemheight = layer.height / 5;
        //将宽高平均分成10等份，画5条线
        for (var i = 1; i < 5; i++) {
            //纵轴
            canvas.drawLine({
                strokeStyle: '#cccccc',
                strokeWidth: 1,
                layer: true,
                x1: layer.x + 1, y1: layer.y + (oneitemheight * i) ,
                x2: layer.x + layer.width - 1, y2: layer.y + (oneitemheight * i) ,
            });
        }
    }
    function drawDepths(canvas, layer) {
        var oneitemheight = layer.height / 5;
        //将宽高平均分成10等份，画5条线
        for (var i = 1; i < 5; i++) {
            //纵轴
            canvas.drawLine({
                strokeStyle: 'black',
                strokeWidth: 1,
                layer: true,
                x1: layer.x + 1, y1: layer.y + (oneitemheight * i) + 0.5,
                x2: layer.x + 5, y2: layer.y + (oneitemheight * i) + 0.5,
            }).drawLine({
                strokeStyle: 'black',
                strokeWidth: 1,
                layer: true,
                x1: layer.x + layer.width - 6, y1: layer.y + (oneitemheight * i) + 0.5,
                x2: layer.x + layer.width - 1, y2: layer.y + (oneitemheight * i) + 0.5,
            }).drawText({
                fillStyle: 'black',
                layer: true,
                x: layer.x + 25, y: layer.y + (oneitemheight * i),
                fontSize: 12,
                text: i * 1000,
                fontFamily: '宋体'
            });

        }
    }
    function drawAreaLine(canvas,layer)
    {
        canvas.drawLine({
            strokeStyle: 'red',
            strokeWidth: 1,
            opacity:0,
            layer: true,
            name: 'area_line',
            x1: 0, y1: 0.5,
            x2: 350, y2: 0.5
        })
    }
    function Big() {
        $('#can_header').scaleCanvas({
            scale: 0.5
        }).restoreCanvas();
        $('#can_datas').scaleCanvas({
            scale: 2
        }).restoreCanvas();
    }
    </script>
@*<script type="text/javascript" src="@Url.Content("~/Scripts/DataMonitor_Canvas.js")?v=8"></script>*@
<div  style="width:100%;overflow:auto;height:160px;">
     
<canvas id="can_header">

    </canvas>
    </div>
<div  style="width:100%;overflow:auto;height:450px;">

<canvas id="can_datas">

    </canvas>
    </div>
<ul class="contextmenu">
            <li>
				<a href="">添加道</a>
			</li>
			<li>
				<a href="">删除本道</a>
			</li>
			
		</ul>

    </body>
    </html>

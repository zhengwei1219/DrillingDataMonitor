@{
    ViewBag.Title = "Curve";
}
<script src="@Url.Content("~/Scripts/jcanvas.min.js")?v=8"></script>
<style type="text/css">
    ul {
        list-style-type: none;
    }

    #contextmenu {
        position: absolute;
        top: -9999px;
        left: -9999px;
    }

        #contextmenu ul {
            float: left;
            border: 1px solid #979797;
            background: #f1f1f1 url(/img/20120327wwwzzjsnet_1.png) 24px 0 repeat-y;
            padding: 2px;
            box-shadow: 2px 2px 2px rgba(0,0,0,.6);
        }

            #contextmenu ul li {
                float: left;
                clear: both;
                height: 24px;
                cursor: pointer;
                line-height: 24px;
                white-space: nowrap;
                padding: 0 30px;
            }

                #contextmenu ul li.sub {
                    background-repeat: no-repeat;
                    background-position: right 9px;
                    background-image: url(/img/20120327wwwzzjsnet_2.png);
                }

                #contextmenu ul li.active {
                    background-color: #f1f3f6;
                    border-radius: 3px;
                    border: 1px solid #aecff7;
                    height: 22px;
                    line-height: 22px;
                    background-position: right -8px;
                    padding: 0 29px;
                }

            #contextmenu ul ul {
                display: none;
                position: absolute;
            }
			
			
</style>
<script type="text/javascript">
    var getOffset = {
        top: function (obj) {
            return obj.offsetTop + (obj.offsetParent ? arguments.callee(obj.offsetParent) : 0)
        },
        left: function (obj) {
            return obj.offsetLeft + (obj.offsetParent ? arguments.callee(obj.offsetParent) : 0)
        }
    };
    var Controlobj;
    //$(function () {
    //    $("#dv_curve").height(($(document).height()-10 ) + "px");
    //});
    document.oncontextmenu = function (e) {
        return false;
    }
    $(document).click(function () {
        $(".contextmenu").hide();
    });
    function contextmenufun(e) {
        var oMenu = document.getElementById("contextmenu");
        var aUl = oMenu.getElementsByTagName("ul");
        var aLi = oMenu.getElementsByTagName("li");
        var showTimer = hideTimer = null;
        var i = 0;
        var maxWidth = maxHeight = 0;
        var aDoc = [document.documentElement.offsetWidth, document.documentElement.offsetHeight];
        oMenu.style.display = "none";
        for (i = 0; i < aLi.length; i++) {
            //为含有子菜单的li加上箭头
            aLi[i].getElementsByTagName("ul")[0] && (aLi[i].className = "sub");
            //鼠标移入
            aLi[i].onmouseover = function () {
                var oThis = this;
                var oUl = oThis.getElementsByTagName("ul");
                //鼠标移入样式
                oThis.className += " active";
                //显示子菜单
                if (oUl[0]) {
                    clearTimeout(hideTimer);
                    showTimer = setTimeout(function () {
                        for (i = 0; i < oThis.parentNode.children.length; i++) {
                            oThis.parentNode.children[i].getElementsByTagName("ul")[0] &&
                            (oThis.parentNode.children[i].getElementsByTagName("ul")[0].style.display = "none");
                        }
                        oUl[0].style.display = "block";
                        oUl[0].style.top = oThis.offsetTop + "px";
                        oUl[0].style.left = oThis.offsetWidth + "px";
                        setWidth(oUl[0]);
                        //最大显示范围
                        maxWidth = aDoc[0] - oUl[0].offsetWidth;
                        maxHeight = aDoc[1] - oUl[0].offsetHeight;
                        //防止溢出
                        maxWidth < getOffset.left(oUl[0]) && (oUl[0].style.left = -oUl[0].clientWidth + "px");
                        maxHeight < getOffset.top(oUl[0]) && (oUl[0].style.top = -oUl[0].clientHeight + oThis.offsetTop + oThis.clientHeight + "px")
                    }, 300);
                }
            };
            //鼠标移出
            aLi[i].onmouseout = function () {
                var oThis = this;
                var oUl = oThis.getElementsByTagName("ul");
                //鼠标移出样式
                oThis.className = oThis.className.replace(/\s?active/, "");
                clearTimeout(showTimer);
                hideTimer = setTimeout(function () {
                    for (i = 0; i < oThis.parentNode.children.length; i++) {
                        oThis.parentNode.children[i].getElementsByTagName("ul")[0] &&
                        (oThis.parentNode.children[i].getElementsByTagName("ul")[0].style.display = "none");
                    }
                }, 300);
            };
        }
        oMenu.style.display = "block";
        oMenu.style.top = event.clientY + "px";
        oMenu.style.left = event.clientX + "px";
        setWidth(aUl[0]);
        //最大显示范围
        maxWidth = aDoc[0] - oMenu.offsetWidth;
        maxHeight = aDoc[1] - oMenu.offsetHeight;
        //防止菜单溢出
        oMenu.offsetTop > maxHeight && (oMenu.style.top = maxHeight + "px");
        oMenu.offsetLeft > maxWidth && (oMenu.style.left = maxWidth + "px");
        return false;
    }
    window.onload = function () {
       

        //点击隐藏菜单
        document.onclick = function () {
        var oMenu = document.getElementById("contextmenu");
            oMenu.style.display = "none"
        };
        //取li中最大的宽度, 并赋给同级所有li
        function setWidth(obj) {
            maxWidth = 0;
            for (i = 0; i < obj.children.length; i++) {
                var oLi = obj.children[i];
                var iWidth = oLi.clientWidth - parseInt(oLi.currentStyle ? oLi.currentStyle["paddingLeft"] : getComputedStyle(oLi, null)["paddingLeft"]) * 2
                if (iWidth > maxWidth) maxWidth = iWidth;
            }
            for (i = 0; i < obj.children.length; i++) obj.children[i].style.width = maxWidth + "px";
        }


        var canwidth=$(document).width()-20;
        var canheight=250;
        $('#can_header').attr("width", canwidth);
        $('#can_header').attr("height", canheight);
        $('#can_header').drawLine({
            fillStyle: '#ffffff',
            layer: true,
            x1: 0, y1: 0,
            x2: canwidth, y2: 0,
            x3: canwidth, y3: canheight,
            x4: 0, y4: canheight,
            closed: true
        });
        function headerRect(text, width) {
            this.text=text;
            this.width=width
        };
        var arr = new Array();
        arr.push(new headerRect("钻压/钻速/垂深", 150));
        arr.push(new headerRect("深\n度", 50));
        arr.push(new headerRect("电阻率", 150));
        arr.push(new headerRect("循环当量/\n泥浆入口密度", 150));
        arr.push(new headerRect("伽马/\n大钩高度", 150));
        arr.push(new headerRect("孔隙度/\n密度", 150));
        arr.push(new headerRect("录井气测", 150));
        arr.push(new headerRect("岩性剖面", 150));
        arr.push(new headerRect("荧\n光\n级\n别", 50));
        arr.push(new headerRect("岩性描述", 150));
        var rectX = 0;
        for (var i = 0; i < arr.length; i++) {
           
            
            if (i != 0) {
                rectX += arr[i - 1].width;
            } else {
                rectX = 100;
            }
            var textX = rectX + arr[i].width / 2;
            var curve = "curve" + i;
            $('#can_header').drawRect({
                strokeStyle: '#000',
                strokeWidth: 2,
                layer: true,
                draggable: true,
                x: rectX, y: 100,
                width: arr[i].width,
                height: 200,
                fromCenter: false,
                groups: [curve],
                dragGroups: [curve],
                restrictDragToAxis: 'x'
            }).drawText({
                fillStyle: 'blue',
                x: textX, y: 175,
                fontSize: 18,
                text: arr[i].text,
                fontFamily: '宋体',
                groups: [curve],
                dragGroups: [curve],
                restrictDragToAxis: 'x'
            }).mousedown(function(e){
                        if(e.which == 3){  // 1 = 鼠标左键; 2 = 鼠标中键; 3 = 鼠标右键
                           contextmenufun(e);
                   }
                   });
        }
     
        //$('#can_header').drawRect({
        //        strokeStyle: '#000',
        //        strokeWidth: 2,
        //        layer: true,
        //        draggable: true,
        //        x: 100, y: 100,
        //        width: 150,
        //        height: 150,
        //        fromCenter: false,
        //        groups: ['curve1'],
        //        dragGroups: ['curve1'],
        //        restrictDragToAxis: 'x'
        //    })
        //    .mousedown(function(e){
        //        if(e.which == 3){  // 1 = 鼠标左键; 2 = 鼠标中键; 3 = 鼠标右键
        //            contextmenufun(e);
        //    }
        //    })
        //    //.drawLine({
        //    //strokeStyle: '#000',
        //    //strokeWidth: 2,
        //    //x1: 100, y1: 50,
        //    //x2: 250, y2: 50,
        //    //x3: 250, y3: 200,
        //    //x4: 100, y4: 200,
        //    //closed: true
        //    //})
        //    .drawText({
        //    fillStyle: 'blue',
        //    x: 175, y: 175,
        //    fontSize: 18,
        //    text: '钻压/钻速/垂深',
        //    fontFamily: '宋体',
        //    groups: ['curve1'],
        //    dragGroups: ['curve1'],
        //    restrictDragToAxis: 'x'
        //    }).drawLine({
        //        layer: true,
        //    strokeStyle: '#000',
        //    strokeWidth: 1,
        //    x1: 100, y1: 220.5,
        //    x2: 250, y2: 220.5,
        //    groups: ['curve1'],
        //    dragGroups: ['curve1'],
        //    restrictDragToAxis: 'x'
        //    }).drawRect({
        //        strokeStyle: '#000',
        //        strokeWidth: 2,
        //        layer: true,
        //        draggable: true,
        //        x: 250, y: 100,
        //        width: 50,
        //        height: 150,
        //        fromCenter: false,
        //        groups: ['curve2'],
        //        dragGroups: ['curve2'],
        //        restrictDragToAxis: 'x'
        //    }).drawText({
        //        layer: true,
        //        fillStyle: 'blue',
        //    x: 275, y: 175,
        //    fontSize: 18,
        //    text: '深\n度',
        //    fontFamily: '宋体',
        //    groups: ['curve2'],
        //    dragGroups: ['curve2'],
        //    restrictDragToAxis: 'x',
        //    maxWidth: 20
        //    }).drawRect({
        //        strokeStyle: '#000',
        //        strokeWidth: 2,
        //        layer: true,
        //        draggable: true,
        //        x: 300, y: 100,
        //        width: 150,
        //        height: 150,
        //        fromCenter: false,
        //        groups: ['curve3'],
        //        dragGroups: ['curve3'],
        //        restrictDragToAxis: 'x'
        //    }).drawText({
        //        layer: true,
        //    fillStyle: 'blue',
        //    x: 380, y: 175,
        //    fontSize: 18,
        //    text: '电阻率',
        //    fontFamily: '宋体',
        //    groups: ['curve3'],
        //    dragGroups: ['curve3'],
        //    restrictDragToAxis: 'x'
        //    }).drawRect({
        //        strokeStyle: '#000',
        //        strokeWidth: 2,
        //        layer: true,
        //        draggable: true,
        //        x: 450, y: 100,
        //        width: 150,
        //        height: 150,
        //        fromCenter: false,
        //        groups: ['curve4'],
        //        dragGroups: ['curve4'],
        //        restrictDragToAxis: 'x'
        //    }).drawText({
        //        layer: true,
        //        fillStyle: 'blue',
        //        x: 520, y: 175,
        //        fontSize: 18,
                
        //        text: '循环当量/\n泥浆入口密度',
        //        fontFamily: '宋体',
        //        groups: ['curve4'],
        //        dragGroups: ['curve4'],
        //        restrictDragToAxis: 'x',
        //        maxWidth:300,
        //    }).drawRect({
        //        strokeStyle: '#000',
        //        strokeWidth: 2,
        //        layer: true,
        //        draggable: true,
        //        x: 600, y: 100,
        //        width: 150,
        //        height: 150,
        //        fromCenter: false,
        //        groups: ['curve5'],
        //        dragGroups: ['curve5'],
        //        restrictDragToAxis: 'x'
        //    }).drawText({
        //        layer: true,
        //        fillStyle: 'blue',
        //        x: 680, y: 175,
        //        fontSize: 18,

        //        text: '伽马/\n大钩高度',
        //        fontFamily: '宋体',
        //        groups: ['curve5'],
        //        dragGroups: ['curve5'],
        //        restrictDragToAxis: 'x',
        //        maxWidth: 300,
        //    }).drawRect({
        //        strokeStyle: '#000',
        //        strokeWidth: 2,
        //        layer: true,
        //        draggable: true,
        //        x: 750, y: 100,
        //        width: 150,
        //        height: 150,
        //        fromCenter: false,
        //        groups: ['curve6'],
        //        dragGroups: ['curve6'],
        //        restrictDragToAxis: 'x'
        //    }).drawText({
        //        layer: true,
        //        fillStyle: 'blue',
        //        x: 830, y: 175,
        //        fontSize: 18,

        //        text: '孔隙度/\n密度',
        //        fontFamily: '宋体',
        //        groups: ['curve6'],
        //        dragGroups: ['curve6'],
        //        restrictDragToAxis: 'x',
        //        maxWidth: 300,
        //    }).drawRect({
        //        strokeStyle: '#000',
        //        strokeWidth: 2,
        //        layer: true,
        //        draggable: true,
        //        x: 900, y: 100,
        //        width: 150,
        //        height: 150,
        //        fromCenter: false,
        //        groups: ['curve7'],
        //        dragGroups: ['curve7'],
        //        restrictDragToAxis: 'x'
        //    }).drawText({
        //        layer: true,
        //        fillStyle: 'blue',
        //        x: 980, y: 175,
        //        fontSize: 18,

        //        text: '录井气测',
        //        fontFamily: '宋体',
        //        groups: ['curve7'],
        //        dragGroups: ['curve7'],
        //        restrictDragToAxis: 'x',
        //        maxWidth: 300,
        //    }).drawRect({
        //        strokeStyle: '#000',
        //        strokeWidth: 2,
        //        layer: true,
        //        draggable: true,
        //        x: 1050, y: 100,
        //        width: 100,
        //        height: 150,
        //        fromCenter: false,
        //        groups: ['curve8'],
        //        dragGroups: ['curve8'],
        //        restrictDragToAxis: 'x'
        //    }).drawText({
        //        layer: true,
        //        fillStyle: 'blue',
        //        x: 1100, y: 175,
        //        fontSize: 18,

        //        text: '岩性剖面',
        //        fontFamily: '宋体',
        //        groups: ['curve9'],
        //        dragGroups: ['curve9'],
        //        restrictDragToAxis: 'x',
        //        maxWidth: 300,
        //    }).drawRect({
        //        strokeStyle: '#000',
        //        strokeWidth: 2,
        //        layer: true,
        //        draggable: true,
        //        x: 1150, y: 100,
        //        width: 50,
        //        height: 150,
        //        fromCenter: false,
        //        groups: ['curve10'],
        //        dragGroups: ['curve10'],
        //        restrictDragToAxis: 'x'
        //    }).drawText({
        //        layer: true,
        //        fillStyle: 'blue',
        //        x: 1175, y: 175,
        //        fontSize: 18,

        //        text: '荧\n光\n级\n别',
        //        fontFamily: '宋体',
        //        groups: ['curve10'],
        //        dragGroups: ['curve10'],
        //        restrictDragToAxis: 'x',
        //        maxWidth: 300,
        //    }).drawRect({
        //        strokeStyle: '#000',
        //        strokeWidth: 2,
        //        layer: true,
        //        draggable: true,
        //        x: 1200, y: 100,
        //        width: 150,
        //        height: 150,
        //        fromCenter: false,
        //        groups: ['curve11'],
        //        dragGroups: ['curve11'],
        //        restrictDragToAxis: 'x'
        //    }).drawText({
        //        layer: true,
        //        fillStyle: 'blue',
        //        x: 1280, y: 175,
        //        fontSize: 18,

        //        text: '岩性描述',
        //        fontFamily: '宋体',
        //        groups: ['curve11'],
        //        dragGroups: ['curve11'],
        //        restrictDragToAxis: 'x',
        //        maxWidth: 300,
        //    });
        $('#can_datas').attr("width", canwidth);
        $('#can_datas').attr("height", 450);
        
        $('#can_datas').drawRect({
            fillStyle: '#ffffff',
            layer: true,
            x: 0, y: 0,
            width: canwidth,
            height: 450,
            fromCenter: false
        })
            .drawRect({
            strokeStyle: '#000',
            strokeWidth: 2,
            layer: true,
            name: 'curve_area_1',
            draggable: false,
            x: 100, y: 0,
            width: 150,
            height: 400,
            fromCenter: false,
            mousemove: function (layer) {
                //让area_line直线跟随鼠标
                $(this).animateLayer('area_line', {
                    opacity:1,
                    x: layer.x, y: layer.eventY
                },0)
            }
        }).drawRect({
            strokeStyle: '#000',
            strokeWidth: 2,
            layer: true,
            draggable: false,
            name: 'curve_area_2',
            x: 250, y: 0,
            width: 50,
            height: 400,
            fromCenter: false
        }).drawRect({
            strokeStyle: '#000',
            strokeWidth: 2,
            layer: true,
            draggable: false,
            name: 'curve_area_3',
            x: 300, y: 0,
            width: 150,
            height: 400,
            fromCenter: false
        });

        drawYLines($('#can_datas'), $('#can_datas').getLayer('curve_area_1'));
        drawXLines($('#can_datas'), $('#can_datas').getLayer('curve_area_1'));
        drawDepths($('#can_datas'), $('#can_datas').getLayer('curve_area_2'));
        drawYLines($('#can_datas'), $('#can_datas').getLayer('curve_area_3'));
        drawXLines($('#can_datas'), $('#can_datas').getLayer('curve_area_3'));
        drawAreaLine($('#can_datas'), $('#can_datas').getLayer('curve_area_1'));
    };
    //画坐标系(自然数)
    function drawYLines(canvas,layer)
    {
        var oneitemwidth = layer.width / 10;
        //将宽高平均分成10等份，画9条线
        for (var i = 1; i < 10; i++) {
            //纵轴
            canvas.drawLine({
                strokeStyle: '#cccccc',
                strokeWidth: 1,
                layer:true,
                x1: layer.x + (oneitemwidth * i) + 0.5, y1: layer.y + 1,
                x2: layer.x + (oneitemwidth * i)+0.5, y2: layer.y + layer.height-1,
            });
        }
    }
    function drawXLines(canvas, layer) {
        var oneitemheight = layer.height / 5;
        //将宽高平均分成10等份，画5条线
        for (var i = 1; i < 5; i++) {
            //纵轴
            canvas.drawLine({
                strokeStyle: '#cccccc',
                strokeWidth: 1,
                layer: true,
                x1: layer.x + 1, y1: layer.y + (oneitemheight * i) + 0.5,
                x2: layer.x + layer.width - 1, y2: layer.y + (oneitemheight * i) + 0.5,
            });
        }
    }
    function drawDepths(canvas, layer) {
        var oneitemheight = layer.height / 5;
        //将宽高平均分成10等份，画5条线
        for (var i = 1; i < 5; i++) {
            //纵轴
            canvas.drawLine({
                strokeStyle: 'black',
                strokeWidth: 1,
                layer: true,
                x1: layer.x + 1, y1: layer.y + (oneitemheight * i) + 0.5,
                x2: layer.x + 5, y2: layer.y + (oneitemheight * i) + 0.5,
            }).drawLine({
                strokeStyle: 'black',
                strokeWidth: 1,
                layer: true,
                x1: layer.x + layer.width - 6, y1: layer.y + (oneitemheight * i) + 0.5,
                x2: layer.x + layer.width - 1, y2: layer.y + (oneitemheight * i) + 0.5,
            }).drawText({
                fillStyle: 'black',
                layer: true,
                x: layer.x + 25, y: layer.y + (oneitemheight * i),
                fontSize: 12,
                text: i * 1000,
                fontFamily: '宋体'
            });

        }
    }
    function drawAreaLine(canvas,layer)
    {
        canvas.drawLine({
            strokeStyle: 'red',
            strokeWidth: 1,
            opacity:0,
            layer: true,
            name: 'area_line',
            x1: 0, y1: 0.5,
            x2: 350, y2: 0.5
        })
    }
    </script>
@*<script type="text/javascript" src="@Url.Content("~/Scripts/DataMonitor_Canvas.js")?v=8"></script>*@
<div  style="width:100%;overflow:auto;height:250px;">
<canvas id="can_header">

    </canvas>
    </div>
<div  style="width:100%;overflow:auto;height:450px;">
<canvas id="can_datas">

    </canvas>
    </div>
<div id="contextmenu">
    <ul>

        <li>
            道操作
            <ul>
               <li> <a href="#" onclick="alert(添加道);">添加道</a></li>
                <li>删除本道</li>
            </ul>
        </li>
        <li>
            二号菜单
            <ul>
                <li>改变网页背景颜色</li>
                <li>函数传参</li>
            </ul>
        </li>
    </ul>
</div>


